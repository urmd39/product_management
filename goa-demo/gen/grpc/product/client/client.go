// Code generated by goa v3.4.3, DO NOT EDIT.
//
// product gRPC client
//
// Command:
// $ goa gen goa-demo/design

package client

import (
	"context"
	productpb "goa-demo/gen/grpc/product/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli productpb.ProductClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the product service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: productpb.NewProductClient(cc),
		opts:    opts,
	}
}

// GetListProduct calls the "GetListProduct" function in
// productpb.ProductClient interface.
func (c *Client) GetListProduct() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildGetListProductFunc(c.grpccli, c.opts...),
			nil,
			DecodeGetListProductResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// GetProduct calls the "GetProduct" function in productpb.ProductClient
// interface.
func (c *Client) GetProduct() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildGetProductFunc(c.grpccli, c.opts...),
			EncodeGetProductRequest,
			DecodeGetProductResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *productpb.GetProductNotFoundError:
				return nil, NewGetProductNotFoundError(message)
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// FilterProduct calls the "FilterProduct" function in productpb.ProductClient
// interface.
func (c *Client) FilterProduct() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildFilterProductFunc(c.grpccli, c.opts...),
			EncodeFilterProductRequest,
			DecodeFilterProductResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *productpb.FilterProductNotFoundError:
				return nil, NewFilterProductNotFoundError(message)
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// CreateProduct calls the "CreateProduct" function in productpb.ProductClient
// interface.
func (c *Client) CreateProduct() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildCreateProductFunc(c.grpccli, c.opts...),
			EncodeCreateProductRequest,
			DecodeCreateProductResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// UpdateProduct calls the "UpdateProduct" function in productpb.ProductClient
// interface.
func (c *Client) UpdateProduct() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildUpdateProductFunc(c.grpccli, c.opts...),
			EncodeUpdateProductRequest,
			DecodeUpdateProductResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// RemoveProduct calls the "RemoveProduct" function in productpb.ProductClient
// interface.
func (c *Client) RemoveProduct() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildRemoveProductFunc(c.grpccli, c.opts...),
			EncodeRemoveProductRequest,
			nil)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
